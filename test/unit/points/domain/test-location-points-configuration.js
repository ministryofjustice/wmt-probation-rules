/* eslint-disable no-new */
const expect = require('chai').expect
const LocationPointsConfiguration = require('../../../../app/points/domain/location-points-configuration')

describe('points/domain/location-points-configuration', function () {
  it('throws an error when any property is undefined', function () {
    expect(function () { new LocationPointsConfiguration(undefined, 1, 1, 1, 1, 1, 1, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, undefined, 1, 1, 1, 1, 1, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, undefined, 1, 1, 1, 1, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, undefined, 1, 1, 1, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, 1, undefined, 1, 1, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, 1, 1, undefined, 1, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, 1, 1, 1, undefined, 1, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, 1, 1, 1, 1, undefined, 1, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, 1, 1, 1, 1, 1, undefined, 1) }).to.throw(Error)
    expect(function () { new LocationPointsConfiguration(1, 1, 1, 1, 1, 1, 1, 1, 1, undefined) }).to.throw(Error)
  })
  it('retrieves all values', function () {
    const locationPointsConfiguration = new LocationPointsConfiguration(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)
    expect(locationPointsConfiguration.tier1).to.equal(1)
    expect(locationPointsConfiguration.tier2).to.equal(2)
    expect(locationPointsConfiguration.tier3).to.equal(3)
    expect(locationPointsConfiguration.tier4).to.equal(4)
    expect(locationPointsConfiguration.tier5).to.equal(5)
    expect(locationPointsConfiguration.tier6).to.equal(6)
    expect(locationPointsConfiguration.tier7).to.equal(7)
    expect(locationPointsConfiguration.tier8).to.equal(8)
    expect(locationPointsConfiguration.tier9).to.equal(9)
    expect(locationPointsConfiguration.tier10).to.equal(10)
    expect(locationPointsConfiguration.tier11).to.equal(11)
    expect(locationPointsConfiguration.tier12).to.equal(12)
    expect(locationPointsConfiguration.tier13).to.equal(13)
    expect(locationPointsConfiguration.tier14).to.equal(14)
    expect(locationPointsConfiguration.tier15).to.equal(15)
    expect(locationPointsConfiguration.tier16).to.equal(16)
  })
})
