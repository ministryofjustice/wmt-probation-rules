const expect = require('chai').expect
const filterOmGradeCode = require('../../../app/context-map/om-grade-code')

describe('context-map/om-grade-code', () => {
  describe('valid codes', () => {
    it('returns PO grade code when a PO nDelius code is passed in', () => {
      expect(filterOmGradeCode('M')).to.equal('PO')
      expect(filterOmGradeCode('E')).to.equal('PO')
      expect(filterOmGradeCode('D')).to.equal('PO')
      expect(filterOmGradeCode('O')).to.equal('PO')
      expect(filterOmGradeCode('J')).to.equal('PO')
      expect(filterOmGradeCode('H')).to.equal('PO')
      expect(filterOmGradeCode('N')).to.equal('PO')
      expect(filterOmGradeCode('G')).to.equal('PO')
      expect(filterOmGradeCode('F')).to.equal('PO')
      expect(filterOmGradeCode('CRCM')).to.equal('PO')
      expect(filterOmGradeCode('CRCO')).to.equal('PO')
      expect(filterOmGradeCode('CRCN')).to.equal('PO')
      expect(filterOmGradeCode('NPSM')).to.equal('PO')
      expect(filterOmGradeCode('NPSO')).to.equal('PO')
      expect(filterOmGradeCode('NPSN')).to.equal('PO')
      expect(filterOmGradeCode('PSM')).to.equal('PO')
      expect(filterOmGradeCode('PSO')).to.equal('PO')
      expect(filterOmGradeCode('PSN')).to.equal('PO')
    })

    it('returns TPO grade code when a TPO nDelius code is passed in', () => {
      expect(filterOmGradeCode('P')).to.equal('TPO')
      expect(filterOmGradeCode('L')).to.equal('TPO')
      expect(filterOmGradeCode('K')).to.equal('TPO')
      expect(filterOmGradeCode('CRCP')).to.equal('TPO')
      expect(filterOmGradeCode('NPSP')).to.equal('TPO')
      expect(filterOmGradeCode('PSP')).to.equal('TPO')
      expect(filterOmGradeCode('CPQF')).to.equal('TPO')
      expect(filterOmGradeCode('CRC - PQF')).to.equal('TPO')
      expect(filterOmGradeCode('NPS - PQF')).to.equal('TPO')
      expect(filterOmGradeCode('CRC-PQF')).to.equal('TPO')
      expect(filterOmGradeCode('NPS-PQF')).to.equal('TPO')
      expect(filterOmGradeCode('CRC — PQF')).to.equal('TPO')
      expect(filterOmGradeCode('NPS — PQF')).to.equal('TPO')
      expect(filterOmGradeCode('CRC—PQF')).to.equal('TPO')
      expect(filterOmGradeCode('NPS—PQF')).to.equal('TPO')
      expect(filterOmGradeCode('CRC – PQF')).to.equal('TPO')
      expect(filterOmGradeCode('NPS – PQF')).to.equal('TPO')
      expect(filterOmGradeCode('CRC–PQF')).to.equal('TPO')
      expect(filterOmGradeCode('NPS–PQF')).to.equal('TPO')
    })

    it('returns PSO grade code when a PSO nDelius code is passed in', () => {
      expect(filterOmGradeCode('Q')).to.equal('PSO')
      expect(filterOmGradeCode('Z')).to.equal('PSO')
      expect(filterOmGradeCode('Y')).to.equal('PSO')
      expect(filterOmGradeCode('CRCQ')).to.equal('PSO')
      expect(filterOmGradeCode('NPSQ')).to.equal('PSO')
      expect(filterOmGradeCode('PSQ')).to.equal('PSO')
      expect(filterOmGradeCode('CRCC')).to.equal('PSO')
      expect(filterOmGradeCode('CRC2')).to.equal('PSO')
      expect(filterOmGradeCode('CRC1')).to.equal('PSO')
      expect(filterOmGradeCode('PS4')).to.equal('PSO')
    })

    it('returns SPO grade code when a SPO nDelius code is passed in', () => {
      expect(filterOmGradeCode('C')).to.equal('SPO')
      expect(filterOmGradeCode('NPSC')).to.equal('SPO')
      expect(filterOmGradeCode('PSC')).to.equal('SPO')
      expect(filterOmGradeCode('CRCB')).to.equal('SPO')
      expect(filterOmGradeCode('CRCA')).to.equal('SPO')
      expect(filterOmGradeCode('NPSB')).to.equal('SPO')
      expect(filterOmGradeCode('PSB')).to.equal('SPO')
      expect(filterOmGradeCode('PSA')).to.equal('SPO')
      expect(filterOmGradeCode('B')).to.equal('SPO')
      expect(filterOmGradeCode('A')).to.equal('SPO')
    })

    it('returns DMY grade code when a DMY nDelius code is passed in', () => {
      expect(filterOmGradeCode('OG06')).to.equal('DMY')
      expect(filterOmGradeCode('R')).to.equal('DMY')
      expect(filterOmGradeCode('OG08')).to.equal('DMY')
      expect(filterOmGradeCode('OG07')).to.equal('DMY')
      expect(filterOmGradeCode('OG02')).to.equal('DMY')
      expect(filterOmGradeCode('OG05')).to.equal('DMY')
      expect(filterOmGradeCode('NPQF')).to.equal('DMY')
      expect(filterOmGradeCode('OG01')).to.equal('DMY')
      expect(filterOmGradeCode('S')).to.equal('DMY')
      expect(filterOmGradeCode('T')).to.equal('DMY')
      expect(filterOmGradeCode('OG04')).to.equal('DMY')
      expect(filterOmGradeCode('OG03')).to.equal('DMY')
      expect(filterOmGradeCode('CRC6')).to.equal('DMY')
      expect(filterOmGradeCode('CRCR')).to.equal('DMY')
      expect(filterOmGradeCode('CRC01')).to.equal('DMY')
      expect(filterOmGradeCode('CRCS')).to.equal('DMY')
      expect(filterOmGradeCode('CRCT')).to.equal('DMY')
      expect(filterOmGradeCode('CRC4')).to.equal('DMY')
      expect(filterOmGradeCode('CRC3')).to.equal('DMY')
      expect(filterOmGradeCode('NPS6')).to.equal('DMY')
      expect(filterOmGradeCode('NPSR')).to.equal('DMY')
      expect(filterOmGradeCode('NPSA')).to.equal('DMY')
      expect(filterOmGradeCode('NPS2')).to.equal('DMY')
      expect(filterOmGradeCode('NPS1')).to.equal('DMY')
      expect(filterOmGradeCode('NPS01')).to.equal('DMY')
      expect(filterOmGradeCode('NPSS')).to.equal('DMY')
      expect(filterOmGradeCode('NPST')).to.equal('DMY')
      expect(filterOmGradeCode('NPS4')).to.equal('DMY')
      expect(filterOmGradeCode('NPS3')).to.equal('DMY')
      expect(filterOmGradeCode('PS6')).to.equal('DMY')
      expect(filterOmGradeCode('PSR')).to.equal('DMY')
      expect(filterOmGradeCode('PS2')).to.equal('DMY')
      expect(filterOmGradeCode('PS1')).to.equal('DMY')
      expect(filterOmGradeCode('PS01')).to.equal('DMY')
      expect(filterOmGradeCode('PS3')).to.equal('DMY')
      expect(filterOmGradeCode('OGO1')).to.equal('DMY')
      expect(filterOmGradeCode('OGO2')).to.equal('DMY')
      expect(filterOmGradeCode('OGO3')).to.equal('DMY')
      expect(filterOmGradeCode('OGO4')).to.equal('DMY')
      expect(filterOmGradeCode('OGO5')).to.equal('DMY')
      expect(filterOmGradeCode('OGO6')).to.equal('DMY')
      expect(filterOmGradeCode('OGO7')).to.equal('DMY')
      expect(filterOmGradeCode('OGO8')).to.equal('DMY')
      expect(filterOmGradeCode('R')).to.equal('DMY')
      expect(filterOmGradeCode('S')).to.equal('DMY')
      expect(filterOmGradeCode('T')).to.equal('DMY')
      expect(filterOmGradeCode('CRCT')).to.equal('DMY')
      expect(filterOmGradeCode('CRC4')).to.equal('DMY')
      expect(filterOmGradeCode('CRC3')).to.equal('DMY')
      expect(filterOmGradeCode('NPS6')).to.equal('DMY')
      expect(filterOmGradeCode('NPSR')).to.equal('DMY')
      expect(filterOmGradeCode('')).to.equal('DMY')
      expect(filterOmGradeCode(null)).to.equal('DMY')
      expect(filterOmGradeCode(undefined)).to.equal('DMY')
      expect(filterOmGradeCode(' ')).to.equal('DMY')
    })
  })

  describe('invalid codes', () => {
    it('return the DMY code as default', () => {
      expect(filterOmGradeCode('ABCD')).to.equal('DMY')
      expect(filterOmGradeCode('1234*')).to.equal('DMY')
    })
  })
})
